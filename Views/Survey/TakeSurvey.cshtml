@{
    Layout = null;
}
@using Survey_Feedback_App.Core.Domain.Enum;
@model Survey_Feedback_App.Core.Application.DTOs.ResponseDTO.SurveyFeedbackViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - Survey Feedback</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .survey-image {
            max-width: 100%;
            height: auto;
            margin-bottom: 1.5rem;
            border-radius: 8px;
            box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-lg-8 col-md-10">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h2 class="card-title text-center">@Model.Survey.Title</h2>

                        @if (Model.Survey != null && Model.ShowSurveyForm)
                        {
                            @if (!string.IsNullOrEmpty(Model.Survey.Uplaod))
                            {
                                <div class="text-center">
                                    <img src="@Model.Survey.Uplaod" alt="Survey Image" class="survey-image" />
                                </div>
                            }
                            @using (Html.BeginForm("SubmitFeedback", "Survey", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                            {
                                @Html.HiddenFor(m => m.Survey.SurveyId)
                                @Html.HiddenFor(m => m.Survey.UsersUnregId)
                                @Html.HiddenFor(m => m.Email)
                                @Html.HiddenFor(m => m.SurveyId) <!-- Hidden field for SurveyId -->
                                @Html.HiddenFor(m => m.Survey.SurveyId)

                                @for (int i = 0; i < Model.Survey.Questions.Count; i++)
                                {
                                    <div class="mb-3">
                                        <label class="form-label">@Model.Survey.Questions[i].Text</label>
                                        @Html.HiddenFor(m => m.Survey.Questions[i].QuestionId)
                                        @Html.HiddenFor(m => m.Survey.Questions[i].Type)
                                        @Html.HiddenFor(m => m.Survey.Questions[i].Text)

                                        @if (Model.Survey.Questions[i].Type == Types.Text)
                                        {
                                            @Html.TextBoxFor(m => m.Survey.Questions[i].Response, new { @class = "form-control", required = "required" })
                                        }
                                        else if (Model.Survey.Questions[i].Type == Types.Radio)
                                        {
                                            @foreach (var option in Model.Survey.Questions[i].Options)
                                            {
                                                <div class="form-check">
                                                    <input class="form-check-input" type="radio" name="Survey.Questions[@i].Response" value="@option.OptionId" required />
                                                    <label class="form-check-label">@option.Text</label>
                                                </div>
                                            }
                                        }
                                        else if (Model.Survey.Questions[i].Type == Types.Checkbox)
                                        {
                                            @foreach (var option in Model.Survey.Questions[i].Options)
                                            {
                                                <div class="form-check">
                                                    <input class="form-check-input" type="checkbox" name="Survey.Questions[@i].SelectedOptions" value="@option.OptionId" />
                                                    <label class="form-check-label">@option.Text</label>
                                                </div>
                                            }
                                        }
                                    </div>
                                }
                                <div class="d-grid">
                                    <button type="submit" class="btn btn-primary">Submit</button>
                                </div>
                            }
                        }
                        else
                        {
                            @using (Html.BeginForm("TakeSurvey", "Survey", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                            {
                                <div class="mb-3">
                                    <label for="inputEmail" class="form-label">Email Address</label>
                                    <input type="email" id="inputEmail" name="Email" class="form-control" required />
                                    <div class="invalid-feedback">
                                        Please enter a valid email address.
                                    </div>
                                </div>
                                @Html.HiddenFor(m => m.SurveyId) <!-- Hidden field for SurveyId -->
                                <div class="d-grid">
                                    <button type="submit" class="btn btn-primary">Start Survey</button>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                            {
                                <div class="alert alert-danger mt-3">@Model.ErrorMessage</div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
</body>
</html>

@{
    Layout = "_Layout1";
}

@model ICollection<Survey_Feedback_App.Core.Application.DTOs.ResponseDTO.AnalysisViewModel>

@{
    ViewData["Title"] = "Survey Analysis";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div class="container mt-5">
        <h2>@ViewData["Title"]</h2>
        @if (Model != null && Model.Any())
        {
            @for (var i = 0; i < Model.Count; i++)
            {
                var question = Model.ElementAt(i);
                <div class="card mb-4">
                    <div class="card-body">
                        <h4 class="card-title">@question.QuestionText</h4>
                        <canvas id="chart-@i"></canvas>
                    </div>
                </div>
                <script>
                    var ctx = document.getElementById('chart-@i').getContext('2d');
                    var chart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: @Html.Raw(Json.Serialize(question.ResponseCounts.Select(rc => rc.OptionText))),
                            datasets: [{
                                label: '# of Responses',
                                data: @Html.Raw(Json.Serialize(question.ResponseCounts.Select(rc => rc.Count))),
                                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        stepSize: 1 // This ensures each count increment is represented
                                    }
                                }
                            }
                        }
                    });
                </script>
            }
        }
        else
        {
            <div class="alert alert-info" role="alert">
                No survey data found.
            </div>
        }
    </div>
</body>
</html>

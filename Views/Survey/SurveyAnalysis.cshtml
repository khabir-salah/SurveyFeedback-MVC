@{
    Layout = "_Layout1";
}

@model ICollection<Survey_Feedback_App.Core.Application.DTOs.ResponseDTO.AnalysisViewModel>

@{
    ViewData["Title"] = "Survey Analysis";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div class="container mt-5">
        <h2>@ViewData["Title"]</h2>
        @foreach (var question in Model)
        {
            <div class="card mb-4">
                <div class="card-body">
                    <h4 class="card-title">@question.QuestionText</h4>
                    <canvas id="chart-@question.QuestionText.GetHashCode()"></canvas>
                </div>
            </div>

            <script>
                var ctx = document.getElementById('chart-@question.QuestionText.GetHashCode()').getContext('2d');
                var chart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: @Html.Raw(Json.Serialize(question.ResponseCounts.Select(rc => rc.OptionText))),
                        datasets: [{
                            label: '# of Responses',
                            data: @Html.Raw(Json.Serialize(question.ResponseCounts.Select(rc => rc.Count))),
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            </script>
        }
    </div>
</body>
</html>

